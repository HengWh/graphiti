def create_extraction_prompt(im_conversation_text: str) -> str:
    """
    生成一个精心设计的Prompt，用于从IM对话中提取实体。

    这个Prompt的设计目标是：
    1.  让LLM输出的JSON结构与我们的Ground Truth格式保持一致（除了id字段）。
    2.  通过详细的定义和示例，提高提取的准确率和召回率。
    """
    # Using a separate template string and .format() is safer and more readable
    # than escaping many curly braces in a large f-string.
    prompt_template = """### 指令 ###
你是一个顶级的实体提取与归一化AI。你的核心任务是：
1.  **精准提取**：从公司内部IM（即时通讯）对话中，抽取出预定义的实体。
2.  **实体归一化**：将指向同一真实实体的不同表述（例如："王强"、"王强哥"、"新人王强"）进行归一化，提取出最核心、最简洁的官方名称。
你的任务是：仔细阅读"待处理的对话记录"，并严格按照"JSON输出格式要求"返回一个JSON对象。
除了JSON对象，不要输出任何额外的解释、开场白或结束语。

### 实体定义与属性 ###
你必须从以下类型中提取实体：
1.  **Person**: 员工姓名、昵称或代称。
    - **提取规则 (重要)**: 提取时应包含原文中与姓名直接相邻的、用于描述身份的修饰词，如职位、部门、或“新人”等称谓。例如，对于“新人刘洋”，应提取“新人刘洋”；对于“产品部的张三”，应提取“产品部的张三”。
    - **排除规则**: **不要**提取以"@"开头的文本（例如"@王强"）作为独立的实体。这些通常是用于提醒（mention），而不是独立的实体指代。你应该提取不含"@"的实体（例如，从"@李明 (项目经理)"中提取"李明"）。
    - **attributes**:
        - `normalized_text`: 将提取到的员工姓名、昵称或代称归一化为最核心的官方姓名。例如，"架构组的王强"、"王强哥"、"新人王强"都应归一化为"王强"。
2.  **Document**: 一个具体的、有明确名称的文档、文件、报告等。
    - **提取要求**: 必须提取具有明确、特定名称的文档。例如 "盘古项目技术方案_v1.2.docx" 是一个有效的文档。
    - **排除规则**: **不要**提取泛指的、没有具体名称的文档类型。例如，像 "会议纪要"、"进展材料"、"那个文档"、"分享的PPT" 这类模糊的表述，**不应**被视为独立的Document实体，除非它们有更具体的文件名。
    - **attributes**:
        - `title`: 文档的核心标题 (从文件名中去除版本和格式)。
        - `version`: 版本号，如果没有版本号，省略此字段。例如: "v3.1", "FINAL_v4.0", "W46"。
        - `format`: 文件格式。例如: "docx", "pdf", "xlsx", "pptx", "png", "md"。
        - `project`: 如果文档明确关联某个项目。
        - `meeting`: 如果文档是某个会议的产物 (如会议纪要)。

### JSON输出格式要求 ###
你必须输出一个JSON对象，该对象只包含一个名为 "entities" 的键，其值为一个列表。
列表中的每个元素都是一个实体对象，该对象必须包含以下键：
- **`text`**: 从原文中一字不差地抽取的实体文本。**重要提示**：如果原文中的实体带有引号（例如 "盘古项目"），提取时请务必去除引号。
- **`type`**: 上述定义的实体类型之一。
- **`context`**: 原文中能证明该实体身份的最直接的上下文短语。这对于理解提取原因至关重要。
- **`attributes`**: 一个包含实体属性的JSON对象。如果实体没有任何可提取的属性，请提供一个空对象 `{{}}`。

### 示例 ###
**输入:**
"张伟：李雪，你看到我发给你的那个《2025年Q3产品路线图.docx》了吗？我们需要根据那个文档来规划下一步的工作。"

**输出:**
```json
{{
  "entities": [
    {{
      "text": "张伟",
      "type": "Person",
      "context": "张伟：李雪，你看到我发给你的那个《2025年Q3产品路线图.docx》了吗？",
      "attributes": {{
        "normalized_text": "张伟"
      }}
    }},
    {{
      "text": "李雪",
      "type": "Person",
      "context": "张伟：李雪，你看到我发给你的那个《2025年Q3产品路线图.docx》了吗？",
      "attributes": {{
        "normalized_text": "李雪"
      }}
    }},
    {{
      "text": "2025年Q3产品路线图.docx",
      "type": "Document",
      "context": "你看到我发给你的那个《2025年Q3产品路线图.docx》了吗？",
      "attributes": {{
        "title": "2025年Q3产品路线图",
        "format": "docx"
      }}
    }}
  ]
}}
```

### 待处理的对话记录 ###
{conversation}

### 你的输出 ###
"""
    return prompt_template.format(conversation=im_conversation_text)
